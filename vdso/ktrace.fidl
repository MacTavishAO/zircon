// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library zx;

[Transport = "Syscall"]
protocol ktrace {
    // TODO(scottmg): This is another one where it's:
    //   (handle, data, offset, data_size)
    // rather than:
    //   (handle, data, data_size, offset).
    /// Rights: handle must have resource kind ZX_RSRC_KIND_ROOT.
    [ArgReorder = "handle, data, offset, data_size, actual"]
    ktrace_read(handle:RESOURCE handle, uint32 offset)
        -> (status status, vector_void data, usize actual);

    // TODO(scottmg): syscalls.banjo had the length of |ptr| being |action|?
    /// Rights: handle must have resource kind ZX_RSRC_KIND_ROOT.
    ktrace_control(handle:RESOURCE handle, uint32 action, uint32 options, voidptr ptr)
        -> (status status);

    /// Rights: handle must have resource kind ZX_RSRC_KIND_ROOT.
    ktrace_write(handle:RESOURCE handle, uint32 id, uint32 arg0, uint32 arg1) -> (status status);
};
