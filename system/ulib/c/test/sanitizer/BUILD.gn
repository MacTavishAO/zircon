# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/test.gni")

group("sanitizer") {
  testonly = true
  deps = [ ":sanitizer-utils" ]
}

test("sanitizer-utils") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [ "sanitizer-utils.cc" ]
  deps = [
    ":memory-snapshot-test",
    "//sdk/lib/fdio",
    "//zircon/public/lib/async",
    "//zircon/public/lib/ldmsg",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/loader-service",
  ]
  data_deps = [ ":sanitizer-exit-hook-test-helper" ]
}

executable("sanitizer-exit-hook-test-helper") {
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  visibility = [ ":*" ]
  sources = [ "exit-hook-test-helper.cc" ]
}

source_set("memory-snapshot-test") {
  visibility = [ ":*" ]
  sources = [ "memory-snapshot-test.cc" ]
  deps = [
    ":sanitizer-memory-snapshot-test-needed-dso",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxtest",
  ]
  data_deps = [ ":sanitizer-memory-snapshot-test-dlopen-dso" ]

  if (current_cpu == "arm64") {
    cflags = [ "-ffixed-x28" ]
  }
}

# These should be just shared_library(), but must be zx_library() for
# the //build/unification magic to work.

shared_library("sanitizer-memory-snapshot-test-needed-dso") {
  visibility = [ ":*" ]
  sources = [ "sanitizer-memory-snapshot-test-needed-dso.cc" ]
}

shared_library("sanitizer-memory-snapshot-test-dlopen-dso") {
  visibility = [ ":*" ]
  sources = [ "sanitizer-memory-snapshot-test-dlopen-dso.cc" ]
}
