# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/fuzzing/fuzzer.gni")
import("//build/test.gni")

group("test") {
  testonly = true
  deps = [
    ":minfs-integration",
    ":minfs-power",
    ":minfs-unit",
  ]
}

test("minfs-unit") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [
    "unit/bcache_test.cc",
    "unit/buffer_view_test.cc",
    "unit/command_handler_test.cc",
    "unit/disk_struct_test.cc",
    "unit/format_test.cc",
    "unit/fsck_test.cc",
    "unit/inspector_test.cc",
    "unit/journal_integration_fixture.cc",
    "unit/journal_test.cc",
    "unit/lazy_buffer_test.cc",
    "unit/lazy_reader_test.cc",
    "unit/loader_test.cc",
    "unit/minfs_inspector_test.cc",
    "unit/mkfs_test.cc",
    "unit/mount_test.cc",
    "unit/parser_test.cc",
    "unit/resizeable_array_buffer_test.cc",
    "unit/resizeable_vmo_buffer_test.cc",
    "unit/superblock_test.cc",
    "unit/transaction_test.cc",
    "unit/truncate_test.cc",
    "unit/vnode_mapper_test.cc",
  ]
  deps = [
    "//sdk/fidl/fuchsia.minfs:fuchsia.minfs_c",
    "//zircon/public/lib/cksum",
    "//zircon/public/lib/safemath",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zxc",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/block-client",
    "//zircon/system/ulib/block-client:fake-device",
    "//zircon/system/ulib/disk_inspector",
    "//zircon/system/ulib/fs-management",
    "//zircon/system/ulib/fs/test_support",
    "//zircon/system/ulib/fvm",
    "//zircon/system/ulib/minfs",
  ]
  include_dirs = [ "//zircon/system/ulib/minfs" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]

  # TODO(47417): Fix the leaks and remove this.
  deps += [ "//build/config/sanitizers:suppress-lsan.DO-NOT-USE-THIS" ]
}

source_set("integration-fixtures") {
  # TODO(44278): revert to true.
  testonly = false
  sources = [
    "integration/minfs_fixtures.cc",
    "integration/utils.cc",
  ]
  deps = [
    "//sdk/lib/fdio",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/fs/test_support",
    "//zircon/system/ulib/fvm",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/minfs",
  ]
}

test("minfs-integration") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [
    "integration/backup_superblock.cc",
    "integration/integration_main.cc",
    "integration/mount_test.cc",
    "integration/power_test.cc",
    "integration/runtime_state_test.cc",
    "integration/truncate_test.cc",
  ]
  deps = [
    ":integration-fixtures",
    "//sdk/fidl/fuchsia.io:fuchsia.io_llcpp",
    "//sdk/fidl/fuchsia.minfs:fuchsia.minfs_llcpp",
    "//sdk/lib/fdio",
    "//zircon/public/lib/async",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/fs-management",
    "//zircon/system/ulib/fs-test-utils",
    "//zircon/system/ulib/fs/test/posix:posix_tests",
    "//zircon/system/ulib/fs/test_support",
    "//zircon/system/ulib/memfs",
    "//zircon/system/ulib/minfs",
  ]
}

test("minfs-power") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [
    "integration/power_main.cc",
    "integration/power_test.cc",
  ]
  deps = [
    ":integration-fixtures",
    "//sdk/fidl/fuchsia.io:fuchsia.io_llcpp",
    "//sdk/lib/fdio",
    "//zircon/public/lib/async",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fs/test_support",
    "//zircon/system/ulib/memfs",
    "//zircon/system/ulib/minfs",
  ]
}

test("minfs-host") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [ "host/bcache_test.cc" ]
  deps = [
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/minfs",
  ]
  include_dirs = [ "$zx/system/ulib/minfs" ]
}

fuzzer("minfs-fuzzer") {
  sources = [ "unit/fuzz.cc" ]
  deps = [
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zxc",
    "//zircon/system/ulib/block-client:fake-device",
    "//zircon/system/ulib/minfs",
  ]
  include_dirs = [ "$zx/system/ulib/minfs" ]
}
