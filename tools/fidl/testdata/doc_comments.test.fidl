/// library comment #1
///
/// library comment #2
library test.name;


/// bits comment #1
///
/// bits comment #2
bits MyBits:uint32 {
    /// bits member comment #1
    ///
    /// bits member comment #3
    MY_FIRST_BIT = 1;
    MY_OTHER_BIT = 2;
};


/// const comment #1
///
/// const comment #3
const int32 C = 4;


/// enum comment #1.
///
/// enum comment #2.
enum MyEnum : uint32 {
    /// enum Member comment 1.
    FOO = 1;
    // Internal comment.
    BAR = 2;
};

/// struct comment #1
///
/// struct comment #3
struct Struct {
    /// struct member comment #1
    ///
    /// struct member comment #3
    int32 Field;
};

/// union comment #1
///
/// union comment #3
union Union {
    /// union member comment #1
    ///
    /// union member comment #3
    1: int32 Field;
};

/// table comment #1
///
/// table comment #3
table Table {
    /// table field comment #1
    ///
    /// table field comment #3
    1: int32 Field;
};

/// interface comment #1
///
/// interface comment #3
protocol Interface {
    /// method comment #1
    ///
    /// method comment #3
    Method();

    /// event comment #1
    ///
    /// event comment #3
    -> OnEvent();
};

/// service comment #1
///
/// service comment #3
service Service {
    /// member comment #1
    ///
    /// member comment #3
    Interface interface;
};
